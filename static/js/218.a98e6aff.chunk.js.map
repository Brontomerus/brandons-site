{"version":3,"file":"static/js/218.a98e6aff.chunk.js","mappings":"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","sources":["../node_modules/ccount/index.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-find-and-replace/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/color.browser.js","../node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-gfm-autolink-literal/from-markdown.js","../node_modules/mdast-util-gfm-autolink-literal/to-markdown.js","../node_modules/mdast-util-gfm-strikethrough/from-markdown.js","../node_modules/mdast-util-gfm-strikethrough/to-markdown.js","../node_modules/mdast-util-gfm-table/from-markdown.js","../node_modules/mdast-util-gfm-table/to-markdown.js","../node_modules/mdast-util-gfm-task-list-item/from-markdown.js","../node_modules/mdast-util-gfm-task-list-item/to-markdown.js","../node_modules/mdast-util-gfm/from-markdown.js","../node_modules/mdast-util-gfm/to-markdown.js","../node_modules/mdast-util-to-markdown/lib/configure.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/micromark-extension-gfm-autolink-literal/index.js","../node_modules/micromark-extension-gfm-autolink-literal/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/index.js","../node_modules/micromark-extension-gfm-table/index.js","../node_modules/micromark-extension-gfm-table/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/index.js","../node_modules/micromark-extension-gfm-task-list-item/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/micromark-extension-gfm/syntax.js","../node_modules/remark-gfm/index.js","../node_modules/repeat-string/index.js"],"sourcesContent":["'use strict'\n\nmodule.exports = ccount\n\nfunction ccount(source, character) {\n  var value = String(source)\n  var count = 0\n  var index\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character')\n  }\n\n  index = value.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = value.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = markdownTable\n\nvar trailingWhitespace = / +$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar colon = ':'\nvar verticalBar = '|'\n\nvar x = 0\nvar C = 67\nvar L = 76\nvar R = 82\nvar c = 99\nvar l = 108\nvar r = 114\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var padding = settings.padding !== false\n  var start = settings.delimiterStart !== false\n  var end = settings.delimiterEnd !== false\n  var align = (settings.align || []).concat()\n  var alignDelimiters = settings.alignDelimiters !== false\n  var alignments = []\n  var stringLength = settings.stringLength || defaultStringLength\n  var rowIndex = -1\n  var rowLength = table.length\n  var cellMatrix = []\n  var sizeMatrix = []\n  var row = []\n  var sizes = []\n  var longestCellByColumn = []\n  var mostCellsPerRow = 0\n  var cells\n  var columnIndex\n  var columnLength\n  var largest\n  var size\n  var cell\n  var lines\n  var line\n  var before\n  var after\n  var code\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < rowLength) {\n    cells = table[rowIndex]\n    columnIndex = -1\n    columnLength = cells.length\n    row = []\n    sizes = []\n\n    if (columnLength > mostCellsPerRow) {\n      mostCellsPerRow = columnLength\n    }\n\n    while (++columnIndex < columnLength) {\n      cell = serialize(cells[columnIndex])\n\n      if (alignDelimiters === true) {\n        size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        largest = longestCellByColumn[columnIndex]\n\n        if (largest === undefined || size > largest) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    code = toAlignment(align)\n\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n  row = []\n  sizes = []\n\n  while (++columnIndex < columnLength) {\n    code = alignments[columnIndex]\n    before = ''\n    after = ''\n\n    if (code === l) {\n      before = colon\n    } else if (code === r) {\n      after = colon\n    } else if (code === c) {\n      before = colon\n      after = colon\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    size = alignDelimiters\n      ? Math.max(\n          1,\n          longestCellByColumn[columnIndex] - before.length - after.length\n        )\n      : 1\n\n    cell = before + repeat(dash, size) + after\n\n    if (alignDelimiters === true) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  rowLength = cellMatrix.length\n  lines = []\n\n  while (++rowIndex < rowLength) {\n    row = cellMatrix[rowIndex]\n    sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    columnLength = mostCellsPerRow\n    line = []\n\n    while (++columnIndex < columnLength) {\n      cell = row[columnIndex] || ''\n      before = ''\n      after = ''\n\n      if (alignDelimiters === true) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        code = alignments[columnIndex]\n\n        if (code === r) {\n          before = repeat(space, size)\n        } else if (code === c) {\n          if (size % 2 === 0) {\n            before = repeat(space, size / 2)\n            after = before\n          } else {\n            before = repeat(space, size / 2 + 0.5)\n            after = repeat(space, size / 2 - 0.5)\n          }\n        } else {\n          after = repeat(space, size)\n        }\n      }\n\n      if (start === true && columnIndex === 0) {\n        line.push(verticalBar)\n      }\n\n      if (\n        padding === true &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(alignDelimiters === false && cell === '') &&\n        (start === true || columnIndex !== 0)\n      ) {\n        line.push(space)\n      }\n\n      if (alignDelimiters === true) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (alignDelimiters === true) {\n        line.push(after)\n      }\n\n      if (padding === true) {\n        line.push(space)\n      }\n\n      if (end === true || columnIndex !== columnLength - 1) {\n        line.push(verticalBar)\n      }\n    }\n\n    line = line.join('')\n\n    if (end === false) {\n      line = line.replace(trailingWhitespace, '')\n    }\n\n    lines.push(line)\n  }\n\n  return lines.join(lineFeed)\n}\n\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\nfunction defaultStringLength(value) {\n  return value.length\n}\n\nfunction toAlignment(value) {\n  var code = typeof value === 'string' ? value.charCodeAt(0) : x\n\n  return code === L || code === l\n    ? l\n    : code === R || code === r\n    ? r\n    : code === C || code === c\n    ? c\n    : x\n}\n","'use strict'\n\nmodule.exports = findAndReplace\n\nvar visit = require('unist-util-visit-parents')\nvar convert = require('unist-util-is/convert')\nvar escape = require('escape-string-regexp')\n\nvar splice = [].splice\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings\n  var schema\n\n  if (typeof find === 'string' || (find && typeof find.exec === 'function')) {\n    schema = [[find, replace]]\n  } else {\n    schema = find\n    options = replace\n  }\n\n  settings = options || {}\n\n  search(tree, settings, handlerFactory(toPairs(schema)))\n\n  return tree\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0]\n\n    return handler\n\n    function handler(node, parent) {\n      var find = pair[0]\n      var replace = pair[1]\n      var nodes = []\n      var start = 0\n      var index = parent.children.indexOf(node)\n      var position\n      var match\n      var subhandler\n      var value\n\n      find.lastIndex = 0\n\n      match = find.exec(node.value)\n\n      while (match) {\n        position = match.index\n        value = replace.apply(\n          null,\n          [].concat(match, {index: match.index, input: match.input})\n        )\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({type: 'text', value: node.value.slice(start, position)})\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {type: 'text', value: value}\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value)\n          }\n\n          start = position + match[0].length\n        }\n\n        if (!find.global) {\n          break\n        }\n\n        match = find.exec(node.value)\n      }\n\n      if (position === undefined) {\n        nodes = [node]\n        index--\n      } else {\n        if (start < node.value.length) {\n          nodes.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        nodes.unshift(index, 1)\n        splice.apply(parent.children, nodes)\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1))\n        position = -1\n\n        while (++position < nodes.length) {\n          node = nodes[position]\n\n          if (node.type === 'text') {\n            subhandler(node, parent)\n          } else {\n            search(node, settings, subhandler)\n          }\n        }\n      }\n\n      return index + nodes.length + 1\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || [])\n  var result = []\n\n  visit(tree, 'text', visitor)\n\n  return result\n\n  function visitor(node, parents) {\n    var index = -1\n    var parent\n    var grandparent\n\n    while (++index < parents.length) {\n      parent = parents[index]\n\n      if (\n        ignored(\n          parent,\n          grandparent ? grandparent.children.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    return handler(node, grandparent)\n  }\n}\n\nfunction toPairs(schema) {\n  var result = []\n  var key\n  var index\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema')\n  }\n\n  if ('length' in schema) {\n    index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])])\n    }\n  }\n\n  return result\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner\n\n  function returner() {\n    return replace\n  }\n}\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","module.exports = identity\nfunction identity(d) {\n  return d\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","var ccount = require('ccount')\nvar findAndReplace = require('mdast-util-find-and-replace')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nexports.transforms = [transformGfmAutolinkLiterals]\nexports.enter = {\n  literalAutolink: enterLiteralAutolink,\n  literalAutolinkEmail: enterLiteralAutolinkValue,\n  literalAutolinkHttp: enterLiteralAutolinkValue,\n  literalAutolinkWww: enterLiteralAutolinkValue\n}\nexports.exit = {\n  literalAutolink: exitLiteralAutolink,\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\n  literalAutolinkWww: exitLiteralAutolinkWww\n}\n\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token)\n}\n\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\nfunction findUrl($0, protocol, domain, path, match) {\n  var prefix = ''\n  var parts\n  var result\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    result = [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\nfunction findEmail($0, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\nfunction isCorrectDomain(domain) {\n  var parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction splitUrl(url) {\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  var closingParenIndex\n  var openingParens\n  var closingParens\n\n  if (trail) {\n    url = url.slice(0, trail.index)\n    trail = trail[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\nfunction previous(match, email) {\n  var code = match.input.charCodeAt(match.index - 1)\n  return (\n    (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","var inConstruct = 'phrasing'\nvar notInConstruct = ['autolink', 'link', 'image', 'label']\n\nexports.unsafe = [\n  {\n    character: '@',\n    before: '[+\\\\-.\\\\w]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: '.',\n    before: '[Ww]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: ':',\n    before: '[ps]',\n    after: '\\\\/',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  }\n]\n","exports.canContainEols = ['delete']\nexports.enter = {strikethrough: enterStrikethrough}\nexports.exit = {strikethrough: exitStrikethrough}\n\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\n\nexports.unsafe = [{character: '~', inConstruct: 'phrasing'}]\nexports.handlers = {delete: handleDelete}\n\nhandleDelete.peek = peekDelete\n\nfunction handleDelete(node, _, context) {\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: '~', after: '~'})\n  exit()\n  return '~~' + value + '~~'\n}\n\nfunction peekDelete() {\n  return '~'\n}\n","exports.enter = {\n  table: enterTable,\n  tableData: enterCell,\n  tableHeader: enterCell,\n  tableRow: enterRow\n}\nexports.exit = {\n  codeText: exitCodeText,\n  table: exitTable,\n  tableData: exit,\n  tableHeader: exit,\n  tableRow: exit\n}\n\nfunction enterTable(token) {\n  this.enter({type: 'table', align: token._align, children: []}, token)\n  this.setData('inTable', true)\n}\n\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\nfunction exit(token) {\n  this.exit(token)\n}\n\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\nfunction exitCodeText(token) {\n  var value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  this.stack[this.stack.length - 1].value = value\n  this.exit(token)\n}\n\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\nvar defaultInlineCode = require('mdast-util-to-markdown/lib/handle/inline-code')\nvar markdownTable = require('markdown-table')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var settings = options || {}\n  var padding = settings.tableCellPadding\n  var alignDelimiters = settings.tablePipeAlign\n  var stringLength = settings.stringLength\n  var around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  function handleTable(node, _, context) {\n    return serializeData(handleTableAsData(node, context), node.align)\n  }\n\n  // This function isn’t really used normally, because we handle rows at the\n  // table level.\n  // But, if someone passes in a table row, this ensures we make somewhat sense.\n  function handleTableRow(node, _, context) {\n    var row = handleTableRowAsData(node, context)\n    // `markdown-table` will always add an align row\n    var value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  function handleTableCell(node, _, context) {\n    var exit = context.enter('tableCell')\n    var value = phrasing(node, context, {before: around, after: around})\n    exit()\n    return value\n  }\n\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align: align,\n      alignDelimiters: alignDelimiters,\n      padding: padding,\n      stringLength: stringLength\n    })\n  }\n\n  function handleTableAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('table')\n\n    while (++index < length) {\n      result[index] = handleTableRowAsData(children[index], context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function handleTableRowAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('tableRow')\n\n    while (++index < length) {\n      result[index] = handleTableCell(children[index], node, context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function inlineCodeWithTable(node, parent, context) {\n    var value = defaultInlineCode(node, parent, context)\n\n    if (context.stack.indexOf('tableCell') !== -1) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","exports.exit = {\n  taskListCheckValueChecked: exitCheck,\n  taskListCheckValueUnchecked: exitCheck,\n  paragraph: exitParagraphWithTaskListItem\n}\n\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked =\n    token.type === 'taskListCheckValueChecked'\n}\n\nfunction exitParagraphWithTaskListItem(token) {\n  var parent = this.stack[this.stack.length - 2]\n  var node = this.stack[this.stack.length - 1]\n  var siblings = parent.children\n  var head = node.children[0]\n  var index = -1\n  var firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      if (siblings[index].type === 'paragraph') {\n        firstParaghraph = siblings[index]\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n","var defaultListItem = require('mdast-util-to-markdown/lib/handle/list-item')\n\nexports.unsafe = [{atBreak: true, character: '-', after: '[:|-]'}]\n\nexports.handlers = {\n  listItem: listItemWithTaskListItem\n}\n\nfunction listItemWithTaskListItem(node, parent, context) {\n  var value = defaultListItem(node, parent, context)\n  var head = node.children[0]\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] '\n  }\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown')\nvar table = require('mdast-util-gfm-table/from-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown')\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = configure([\n  autolinkLiteral,\n  strikethrough,\n  table,\n  taskListItem\n])\n\nfunction configure(extensions) {\n  var config = {transforms: [], canContainEols: []}\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/to-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/to-markdown')\nvar table = require('mdast-util-gfm-table/to-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/to-markdown')\nvar configure = require('mdast-util-to-markdown/lib/configure')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var config = configure(\n    {handlers: {}, join: [], unsafe: [], options: {}},\n    {\n      extensions: [autolinkLiteral, strikethrough, table(options), taskListItem]\n    }\n  )\n\n  return Object.assign(config.options, {\n    handlers: config.handlers,\n    join: config.join,\n    unsafe: config.unsafe\n  })\n}\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = require('./syntax')\n","var asciiAlpha = require('micromark/dist/character/ascii-alpha')\nvar asciiAlphanumeric = require('micromark/dist/character/ascii-alphanumeric')\nvar asciiControl = require('micromark/dist/character/ascii-control')\nvar markdownLineEnding = require('micromark/dist/character/markdown-line-ending')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nvar www = {tokenize: tokenizeWww, partial: true}\nvar domain = {tokenize: tokenizeDomain, partial: true}\nvar path = {tokenize: tokenizePath, partial: true}\nvar punctuation = {tokenize: tokenizePunctuation, partial: true}\nvar namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\n\nvar wwwAutolink = {tokenize: tokenizeWwwAutolink, previous: previousWww}\nvar httpAutolink = {tokenize: tokenizeHttpAutolink, previous: previousHttp}\nvar emailAutolink = {tokenize: tokenizeEmailAutolink, previous: previousEmail}\n\nvar text = {}\n\n// Export hooked constructs.\nexports.text = text\n\n// `0`\nvar code = 48\n\n// While the code is smaller than `{`.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  // Jump from `:` -> `A`\n  if (code === 58) code = 65\n  // Jump from `[` -> `a`\n  else if (code === 91) code = 97\n}\n\n// `+`\ntext[43] = emailAutolink\n// `-`\ntext[45] = emailAutolink\n// `.`\ntext[46] = emailAutolink\n// `_`\ntext[95] = emailAutolink\n// `h`.\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\n// `w`.\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  var self = this\n  var hasDot\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    // `@`\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n\n  function label(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (\n      // `-`\n      code === 45 ||\n      // `_`\n      code === 95\n    ) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    return label\n  }\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n\n  function afterDashOrUnderscore(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n\n  function done(code) {\n    if (hasDot) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 87 && code - 32 !== 87) ||\n      !previousWww(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 72 && code - 32 !== 72) ||\n      !previousHttp(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n\n  function t1(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n\n  function t2(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n\n  function p(code) {\n    // `p`\n    if (code === 80 || code - 32 === 80) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n\n  function s(code) {\n    // `s`\n    if (code === 83 || code - 32 === 83) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n\n  function colon(code) {\n    // `:`\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n\n  function slash1(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n\n  function slash2(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume a `w`.\n    effects.consume(code)\n    return w2\n  }\n\n  function w2(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n\n  function w3(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n\n  function dot(code) {\n    // `.`\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n\nfunction tokenizeDomain(effects, ok, nok) {\n  var hasUnderscoreInLastSegment\n  var hasUnderscoreInLastLastSegment\n\n  return domain\n\n  function domain(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 /* `.` */ || code === 95 /* `_` */) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    if (\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 /* `-` */ && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n\n  function punctuationContinuation(code) {\n    // `.`\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    // `_`\n    if (code === 95) hasUnderscoreInLastSegment = true\n\n    effects.consume(code)\n    return domain\n  }\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizePath(effects, ok) {\n  var balance = 0\n\n  return inPath\n\n  function inPath(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    // `(`\n    if (code === 40) {\n      balance++\n    }\n\n    // `)`\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume an ampersand.\n    effects.consume(code)\n    return inside\n  }\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    // `;`\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Always a valid trailing punctuation marker.\n    effects.consume(code)\n    return after\n  }\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    }\n\n    // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction trailingPunctuation(code) {\n  return (\n    // `!`\n    code === 33 ||\n    // `\"`\n    code === 34 ||\n    // `'`\n    code === 39 ||\n    // `)`\n    code === 41 ||\n    // `*`\n    code === 42 ||\n    // `,`\n    code === 44 ||\n    // `.`\n    code === 46 ||\n    // `:`\n    code === 58 ||\n    // `;`\n    code === 59 ||\n    // `<`\n    code === 60 ||\n    // `?`\n    code === 63 ||\n    // `_`.\n    code === 95 ||\n    // `~`\n    code === 126\n  )\n}\n\nfunction pathEnd(code) {\n  return (\n    // EOF.\n    code === null ||\n    // CR, LF, CRLF, HT, VS.\n    code < 0 ||\n    // Space.\n    code === 32 ||\n    // `<`\n    code === 60\n  )\n}\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 /* `+` */ ||\n    code === 45 /* `-` */ ||\n    code === 46 /* `.` */ ||\n    code === 95 /* `_` */ ||\n    asciiAlphanumeric(code)\n  )\n}\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code < 0 ||\n    code === 32 /* ` ` */ ||\n    code === 40 /* `(` */ ||\n    code === 42 /* `*` */ ||\n    code === 95 /* `_` */ ||\n    code === 126 /* `~` */\n  )\n}\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n\nfunction previousEmail(code) {\n  return code !== 47 /* `/` */ && previousHttp(code)\n}\n\nfunction previous(events) {\n  var index = events.length\n\n  while (index--) {\n    if (\n      (events[index][1].type === 'labelLink' ||\n        events[index][1].type === 'labelImage') &&\n      !events[index][1]._balanced\n    ) {\n      return true\n    }\n  }\n}\n","module.exports = create\n\nvar classifyCharacter = require('micromark/dist/util/classify-character')\nvar chunkedSplice = require('micromark/dist/util/chunked-splice')\nvar resolveAll = require('micromark/dist/util/resolve-all')\nvar shallow = require('micromark/dist/util/shallow')\n\nfunction create(options) {\n  var settings = options || {}\n  var single = settings.singleTilde\n  var tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {text: {126: tokenizer}, insideSpan: {null: tokenizer}}\n\n  // Take events and resolve strikethrough.\n  function resolveAllStrikethrough(events, context) {\n    var index = -1\n    var strikethrough\n    var text\n    var open\n    var nextEvents\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            strikethrough = {\n              type: 'strikethrough',\n              start: shallow(events[open][1].start),\n              end: shallow(events[index][1].end)\n            }\n\n            text = {\n              type: 'strikethroughText',\n              start: shallow(events[open][1].end),\n              end: shallow(events[index][1].start)\n            }\n\n            // Opening.\n            nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            // Between.\n            chunkedSplice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            )\n\n            // Closing.\n            chunkedSplice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    return removeRemainingSequences(events)\n  }\n\n  function removeRemainingSequences(events) {\n    var index = -1\n    var length = events.length\n\n    while (++index < length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    var previous = this.previous\n    var events = this.events\n    var size = 0\n\n    return start\n\n    function start(code) {\n      if (\n        code !== 126 ||\n        (previous === 126 &&\n          events[events.length - 1][1].type !== 'characterEscape')\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    function more(code) {\n      var before = classifyCharacter(previous)\n      var token\n      var after\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      token = effects.exit('strikethroughSequenceTemporary')\n      after = classifyCharacter(code)\n      token._open = !after || (after === 2 && before)\n      token._close = !before || (before === 2 && after)\n      return ok(code)\n    }\n  }\n}\n","module.exports = require('./syntax')\n","exports.flow = {\n  null: {tokenize: tokenizeTable, resolve: resolveTable, interruptible: true}\n}\n\nvar createSpace = require('micromark/dist/tokenize/factory-space')\n\nvar setextUnderlineMini = {tokenize: tokenizeSetextUnderlineMini, partial: true}\nvar nextPrefixedOrBlank = {tokenize: tokenizeNextPrefixedOrBlank, partial: true}\n\nfunction resolveTable(events, context) {\n  var length = events.length\n  var index = -1\n  var token\n  var inHead\n  var inDelimiterRow\n  var inRow\n  var cell\n  var content\n  var text\n  var contentStart\n  var contentEnd\n  var cellStart\n\n  while (++index < length) {\n    token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          contentType: 'text'\n        }\n\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        length = events.length\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart &&\n      cellStart + 1 < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      length = events.length\n      cellStart = index + 1\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeTable(effects, ok, nok) {\n  var align = []\n  var tableHeaderCount = 0\n  var seenDelimiter\n  var hasDash\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore if - used to be passed in beta micromark versions. */\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return nok(code)\n    }\n\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentHead(code)\n  }\n\n  function cellDividerHead(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n\n  function cellBreakHead(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndHead(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n\n  function inWhitespaceHead(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n\n  function inCellContentEscapeHead(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    }\n\n    // Anything else.\n    return inCellContentHead(code)\n  }\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n\n    // If a setext heading, exit.\n    return effects.check(\n      setextUnderlineMini,\n      nok,\n      // Support an indent before the delimiter row.\n      createSpace(effects, rowStartDelimiter, 'linePrefix', 4)\n    )\n  }\n\n  function rowStartDelimiter(code) {\n    // If there’s another space, or we’re at the EOL/EOF, exit.\n    if (code === null || code < 0 || code === 32) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    return atDelimiterRowBreak(code)\n  }\n\n  function atDelimiterRowBreak(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push(null)\n      return inFillerDelimiter\n    }\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    }\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function inWhitespaceDelimiter(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n\n  function inFillerDelimiter(code) {\n    // `-`\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n\n  function afterLeftAlignment(code) {\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    }\n\n    // Anything else is not ok.\n    return nok(code)\n  }\n\n  function afterRightAlignment(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `|`\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow')\n\n    // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(nextPrefixedOrBlank, tableClose, tableContinue)(code)\n  }\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n\n  function tableContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // We checked that it’s not a prefixed or blank line, so we’re certain a\n    // body is coming, though it may be indented.\n    return createSpace(effects, bodyStart, 'linePrefix', 4)\n  }\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n\n  function rowStartBody(code) {\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentBody(code)\n  }\n\n  function cellDividerBody(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n\n  function cellBreakBody(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndBody(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n\n  function inWhitespaceBody(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n\n  function inCellContentEscapeBody(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    }\n\n    // Anything else.\n    return inCellContentBody(code)\n  }\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      tableBodyContinue\n    )(code)\n  }\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n\n  function tableBodyContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // Support an optional prefix, then start a body row.\n    return createSpace(effects, rowStartBody, 'linePrefix', 4)\n  }\n}\n\n// Based on micromark, but that won’t work as we’re in a table, and that expects\n// content.\n// <https://github.com/micromark/micromark/blob/main/lib/tokenize/setext-underline.js>\nfunction tokenizeSetextUnderlineMini(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // `-`\n    if (code !== 45) {\n      return nok(code)\n    }\n\n    effects.enter('setextUnderline')\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return sequence\n    }\n\n    return whitespace(code)\n  }\n\n  function whitespace(code) {\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return whitespace\n    }\n\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  var size = 0\n\n  return start\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check')\n    // EOL.\n    effects.consume(code)\n    return whitespace\n  }\n\n  function whitespace(code) {\n    // VS or SP.\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    }\n\n    // EOF or whitespace\n    if (code === null || code < 0) {\n      return ok(code)\n    }\n\n    // Anything else.\n    return nok(code)\n  }\n}\n","module.exports = require('./syntax')\n","var markdownLineEndingOrSpace = require('micromark/dist/character/markdown-line-ending-or-space')\nvar spaceFactory = require('micromark/dist/tokenize/factory-space')\nvar prefixSize = require('micromark/dist/util/prefix-size')\n\nvar tasklistCheck = {tokenize: tokenizeTasklistCheck}\n\nexports.text = {91: tasklistCheck}\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  var self = this\n\n  return open\n\n  function open(code) {\n    if (\n      // Exit if not `[`.\n      code !== 91 ||\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  function inside(code) {\n    // Tab or space.\n    if (code === -2 || code === 32) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    // Upper- and lower `x`.\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  function close(code) {\n    // `]`\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  var self = this\n\n  return spaceFactory(effects, after, 'whitespace')\n\n  function after(code) {\n    return prefixSize(self.events, 'whitespace') &&\n      code !== null &&\n      !markdownLineEndingOrSpace(code)\n      ? ok(code)\n      : nok(code)\n  }\n}\n","module.exports = require('./syntax')\n","var combine = require('micromark/dist/util/combine-extensions')\nvar autolink = require('micromark-extension-gfm-autolink-literal')\nvar strikethrough = require('micromark-extension-gfm-strikethrough')\nvar table = require('micromark-extension-gfm-table')\nvar tasklist = require('micromark-extension-gfm-task-list-item')\n\nmodule.exports = create\n\nfunction create(options) {\n  return combine([autolink, strikethrough(options), table, tasklist])\n}\n","'use strict'\n\nvar syntax = require('micromark-extension-gfm')\nvar fromMarkdown = require('mdast-util-gfm/from-markdown')\nvar toMarkdown = require('mdast-util-gfm/to-markdown')\n\nvar warningIssued\n\nmodule.exports = gfm\n\nfunction gfm(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-gfm] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown(options))\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n"],"names":["module","exports","source","character","index","value","String","count","Error","indexOf","length","repeat","require","table","options","cells","columnIndex","columnLength","largest","size","cell","lines","line","before","after","code","settings","padding","start","delimiterStart","end","delimiterEnd","align","concat","alignDelimiters","alignments","stringLength","defaultStringLength","rowIndex","rowLength","cellMatrix","sizeMatrix","row","sizes","longestCellByColumn","mostCellsPerRow","undefined","push","toAlignment","colon","r","Math","max","splice","space","join","replace","trailingWhitespace","charCodeAt","tree","find","schema","exec","search","handlerFactory","pairs","pair","handler","node","parent","position","match","subhandler","nodes","children","lastIndex","apply","input","type","slice","global","unshift","key","result","toExpression","toFunction","toPairs","visit","convert","escape","ignored","ignore","parents","grandparent","RegExp","string","TypeError","d","visitParents","color","CONTINUE","SKIP","EXIT","test","visitor","reverse","step","is","factory","name","tagName","displayName","subresult","offset","grandparents","toResult","ccount","findAndReplace","unicodePunctuation","unicodeWhitespace","enterLiteralAutolinkValue","token","this","config","enter","autolinkProtocol","call","findUrl","$0","protocol","domain","path","parts","prefix","previous","split","isCorrectDomain","url","closingParenIndex","openingParens","closingParens","trail","splitUrl","title","findEmail","atext","label","email","transforms","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","exit","autolinkEmail","data","stack","sliceSerialize","inConstruct","notInConstruct","unsafe","canContainEols","strikethrough","phrasing","handleDelete","_","context","handlers","delete","peek","enterCell","$1","_align","setData","tableData","tableHeader","tableRow","codeText","resume","getData","defaultInlineCode","markdownTable","tableCellPadding","tablePipeAlign","around","atBreak","serializeData","subexit","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","inlineCode","matrix","exitCheck","checked","taskListCheckValueChecked","taskListCheckValueUnchecked","paragraph","firstParaghraph","siblings","head","shift","column","Object","assign","defaultListItem","listItem","autolinkLiteral","taskListItem","own","hasOwnProperty","extension","left","right","extensions","configure","base","patternCompile","pattern","expression","sequence","charAt","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","indentLines","flow","blank","marker","style","child","results","handle","between","Number","safeOptions","map","eol","one","_compiled","asciiAlpha","asciiAlphanumeric","asciiControl","markdownLineEnding","www","tokenize","effects","ok","nok","consume","w2","w3","dot","partial","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","check","namedCharacterReference","done","punctuationContinuation","punctuation","balance","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","inside","wwwAutolink","self","previousWww","events","attempt","httpAutolink","previousHttp","t1","t2","p","s","slash1","slash2","emailAutolink","hasDot","gfmAtext","previousEmail","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","text","_balanced","single","singleTilde","tokenizer","more","classifyCharacter","_open","_close","resolveAll","open","nextEvents","shallow","chunkedSplice","parser","constructs","insideSpan","null","removeRemainingSequences","seenDelimiter","hasDash","tableHeaderCount","cellDividerHead","inCellContentHead","cellBreakHead","setextUnderlineMini","createSpace","rowStartDelimiter","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","tableContinue","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","tableBodyContinue","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","resolve","inHead","inDelimiterRow","inRow","content","contentStart","contentEnd","cellStart","contentType","interruptible","whitespace","markdownLineEndingOrSpace","spaceFactory","prefixSize","tasklistCheck","_gfmTasklistFirstContentOfListItem","close","spaceThenNonSpace","combine","autolink","tasklist","warningIssued","syntax","fromMarkdown","toMarkdown","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","cache","res","str","num","substr"],"sourceRoot":""}