{"version":3,"sources":["../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/micromark-extension-gfm/syntax.js","../node_modules/micromark-extension-gfm-autolink-literal/index.js","../node_modules/micromark-extension-gfm-autolink-literal/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/index.js","../node_modules/micromark-extension-gfm-table/index.js","../node_modules/micromark-extension-gfm-table/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/index.js","../node_modules/micromark-extension-gfm-task-list-item/syntax.js","../node_modules/mdast-util-gfm/from-markdown.js","../node_modules/mdast-util-gfm-autolink-literal/from-markdown.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/index.js","../node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/color.browser.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-strikethrough/from-markdown.js","../node_modules/mdast-util-gfm-table/from-markdown.js","../node_modules/mdast-util-gfm-task-list-item/from-markdown.js","../node_modules/mdast-util-gfm/to-markdown.js","../node_modules/mdast-util-gfm-autolink-literal/to-markdown.js","../node_modules/mdast-util-gfm-strikethrough/to-markdown.js","../node_modules/mdast-util-gfm-table/to-markdown.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-task-list-item/to-markdown.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/configure.js","../node_modules/repeat-string/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js"],"names":["warningIssued","syntax","require","fromMarkdown","toMarkdown","module","exports","options","data","this","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","value","push","combine","autolink","strikethrough","table","tasklist","asciiAlpha","asciiAlphanumeric","asciiControl","markdownLineEnding","unicodePunctuation","unicodeWhitespace","www","tokenize","effects","ok","nok","code","consume","w2","w3","dot","after","partial","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","check","namedCharacterReference","done","punctuationContinuation","punctuation","undefined","path","balance","inPath","continuedPunctuation","paren","parenAtPathEnd","pathEnd","trailingPunctuation","inside","wwwAutolink","self","previousWww","previous","events","enter","attempt","exit","httpAutolink","previousHttp","t1","t2","p","s","colon","slash1","slash2","emailAutolink","hasDot","gfmAtext","previousEmail","atext","label","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","text","index","length","type","_balanced","single","singleTilde","tokenizer","size","start","more","token","before","classifyCharacter","_open","_close","resolveAll","context","open","nextEvents","end","offset","shallow","chunkedSplice","parser","constructs","insideSpan","null","slice","removeRemainingSequences","126","flow","seenDelimiter","hasDash","align","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","setextUnderlineMini","createSpace","rowStartDelimiter","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","tableContinue","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","tableBodyContinue","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","resolve","inHead","inDelimiterRow","inRow","cell","content","contentStart","contentEnd","cellStart","contentType","splice","interruptible","sequence","whitespace","markdownLineEndingOrSpace","spaceFactory","prefixSize","tasklistCheck","_gfmTasklistFirstContentOfListItem","close","spaceThenNonSpace","91","autolinkLiteral","taskListItem","own","hasOwnProperty","extension","config","key","left","right","call","concat","Object","assign","extensions","transforms","canContainEols","configure","ccount","findAndReplace","enterLiteralAutolinkValue","autolinkProtocol","findUrl","$0","protocol","match","parts","result","prefix","test","split","isCorrectDomain","url","closingParenIndex","openingParens","closingParens","trail","exec","indexOf","splitUrl","title","children","findEmail","email","input","charCodeAt","tree","ignore","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","autolinkEmail","stack","sliceSerialize","source","character","String","count","Error","find","replace","settings","schema","search","handlerFactory","pairs","pair","handler","node","parent","position","subhandler","nodes","lastIndex","apply","global","unshift","toExpression","toFunction","toPairs","visit","convert","escape","ignored","parents","grandparent","RegExp","visitParents","color","CONTINUE","SKIP","EXIT","visitor","reverse","step","is","factory","name","tagName","displayName","subresult","grandparents","toResult","d","string","TypeError","enterCell","$1","setData","tableData","tableHeader","tableRow","codeText","resume","getData","exitCheck","checked","taskListCheckValueChecked","taskListCheckValueUnchecked","paragraph","firstParaghraph","siblings","head","shift","column","handlers","join","unsafe","inConstruct","notInConstruct","phrasing","handleDelete","_","delete","peek","defaultInlineCode","markdownTable","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","atBreak","serializeData","subexit","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","inlineCode","matrix","patternCompile","pattern","expression","charAt","_compiled","repeat","cells","columnIndex","columnLength","largest","lines","line","delimiterStart","delimiterEnd","alignments","defaultStringLength","rowIndex","rowLength","cellMatrix","sizeMatrix","row","sizes","longestCellByColumn","mostCellsPerRow","toAlignment","r","Math","max","space","trailingWhitespace","defaultListItem","listItem","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","indentLines","blank","marker","style","child","results","handle","between","Number","map","eol","one","base","cache","res","str","num","substr","safeOptions"],"mappings":"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","file":"static/js/4.2e32a33f.chunk.js","sourcesContent":["'use strict'\n\nvar syntax = require('micromark-extension-gfm')\nvar fromMarkdown = require('mdast-util-gfm/from-markdown')\nvar toMarkdown = require('mdast-util-gfm/to-markdown')\n\nvar warningIssued\n\nmodule.exports = gfm\n\nfunction gfm(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-gfm] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown(options))\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n","module.exports = require('./syntax')\n","var combine = require('micromark/dist/util/combine-extensions')\nvar autolink = require('micromark-extension-gfm-autolink-literal')\nvar strikethrough = require('micromark-extension-gfm-strikethrough')\nvar table = require('micromark-extension-gfm-table')\nvar tasklist = require('micromark-extension-gfm-task-list-item')\n\nmodule.exports = create\n\nfunction create(options) {\n  return combine([autolink, strikethrough(options), table, tasklist])\n}\n","module.exports = require('./syntax')\n","var asciiAlpha = require('micromark/dist/character/ascii-alpha')\nvar asciiAlphanumeric = require('micromark/dist/character/ascii-alphanumeric')\nvar asciiControl = require('micromark/dist/character/ascii-control')\nvar markdownLineEnding = require('micromark/dist/character/markdown-line-ending')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nvar www = {tokenize: tokenizeWww, partial: true}\nvar domain = {tokenize: tokenizeDomain, partial: true}\nvar path = {tokenize: tokenizePath, partial: true}\nvar punctuation = {tokenize: tokenizePunctuation, partial: true}\nvar paren = {tokenize: tokenizeParen, partial: true}\nvar namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\n\nvar wwwAutolink = {tokenize: tokenizeWwwAutolink, previous: previousWww}\nvar httpAutolink = {tokenize: tokenizeHttpAutolink, previous: previousHttp}\nvar emailAutolink = {tokenize: tokenizeEmailAutolink, previous: previousEmail}\n\nvar text = {}\n\n// Export hooked constructs.\nexports.text = text\n\n// `0`\nvar code = 48\n\n// While the code is smaller than `{`.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  // Jump from `:` -> `A`\n  if (code === 58) code = 65\n  // Jump from `[` -> `a`\n  else if (code === 91) code = 97\n}\n\n// `+`\ntext[43] = emailAutolink\n// `-`\ntext[45] = emailAutolink\n// `.`\ntext[46] = emailAutolink\n// `_`\ntext[95] = emailAutolink\n// `h`.\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\n// `w`.\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  var self = this\n  var hasDot\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    // `@`\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n\n  function label(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (\n      // `-`\n      code === 45 ||\n      // `_`\n      code === 95\n    ) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    return label\n  }\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n\n  function afterDashOrUnderscore(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n\n  function done(code) {\n    if (hasDot) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 87 && code - 32 !== 87) ||\n      !previousWww(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 72 && code - 32 !== 72) ||\n      !previousHttp(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n\n  function t1(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n\n  function t2(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n\n  function p(code) {\n    // `p`\n    if (code === 80 || code - 32 === 80) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n\n  function s(code) {\n    // `s`\n    if (code === 83 || code - 32 === 83) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n\n  function colon(code) {\n    // `:`\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n\n  function slash1(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n\n  function slash2(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume a `w`.\n    effects.consume(code)\n    return w2\n  }\n\n  function w2(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n\n  function w3(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n\n  function dot(code) {\n    // `.`\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n\nfunction tokenizeDomain(effects, ok, nok) {\n  var hasUnderscoreInLastSegment\n  var hasUnderscoreInLastLastSegment\n\n  return domain\n\n  function domain(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 /* `.` */ || code === 95 /* `_` */) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    if (\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 /* `-` */ && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n\n  function punctuationContinuation(code) {\n    // `.`\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    // `_`\n    if (code === 95) hasUnderscoreInLastSegment = true\n\n    effects.consume(code)\n    return domain\n  }\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizePath(effects, ok) {\n  var balance = 0\n\n  return inPath\n\n  function inPath(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    // `(`\n    if (code === 40) {\n      balance++\n    }\n\n    // `)`\n    if (code === 41) {\n      return effects.check(paren, parenAtPathEnd, continuedPunctuation)(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume an ampersand.\n    effects.consume(code)\n    return inside\n  }\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    // `;`\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction tokenizeParen(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume a right paren.\n    effects.consume(code)\n    return after\n  }\n\n  function after(code) {\n    // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n    return pathEnd(code) ||\n      // `)`\n      code === 41\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Always a valid trailing punctuation marker.\n    effects.consume(code)\n    return after\n  }\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    }\n\n    // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction trailingPunctuation(code) {\n  return (\n    // `!`\n    code === 33 ||\n    // `\"`\n    code === 34 ||\n    // `'`\n    code === 39 ||\n    // `)`\n    code === 41 ||\n    // `*`\n    code === 42 ||\n    // `,`\n    code === 44 ||\n    // `.`\n    code === 46 ||\n    // `:`\n    code === 58 ||\n    // `;`\n    code === 59 ||\n    // `<`\n    code === 60 ||\n    // `?`\n    code === 63 ||\n    // `_`.\n    code === 95 ||\n    // `~`\n    code === 126\n  )\n}\n\nfunction pathEnd(code) {\n  return (\n    // EOF.\n    code === null ||\n    // CR, LF, CRLF, HT, VS.\n    code < 0 ||\n    // Space.\n    code === 32 ||\n    // `<`\n    code === 60\n  )\n}\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 /* `+` */ ||\n    code === 45 /* `-` */ ||\n    code === 46 /* `.` */ ||\n    code === 95 /* `_` */ ||\n    asciiAlphanumeric(code)\n  )\n}\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code < 0 ||\n    code === 32 /* ` ` */ ||\n    code === 40 /* `(` */ ||\n    code === 42 /* `*` */ ||\n    code === 95 /* `_` */ ||\n    code === 126 /* `~` */\n  )\n}\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n\nfunction previousEmail(code) {\n  return code !== 47 /* `/` */ && previousHttp(code)\n}\n\nfunction previous(events) {\n  var index = events.length\n\n  while (index--) {\n    if (\n      (events[index][1].type === 'labelLink' ||\n        events[index][1].type === 'labelImage') &&\n      !events[index][1]._balanced\n    ) {\n      return true\n    }\n  }\n}\n","module.exports = create\n\nvar classifyCharacter = require('micromark/dist/util/classify-character')\nvar chunkedSplice = require('micromark/dist/util/chunked-splice')\nvar resolveAll = require('micromark/dist/util/resolve-all')\nvar shallow = require('micromark/dist/util/shallow')\n\nfunction create(options) {\n  var settings = options || {}\n  var single = settings.singleTilde\n  var tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {text: {126: tokenizer}, insideSpan: {null: tokenizer}}\n\n  // Take events and resolve strikethrough.\n  function resolveAllStrikethrough(events, context) {\n    var index = -1\n    var strikethrough\n    var text\n    var open\n    var nextEvents\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            strikethrough = {\n              type: 'strikethrough',\n              start: shallow(events[open][1].start),\n              end: shallow(events[index][1].end)\n            }\n\n            text = {\n              type: 'strikethroughText',\n              start: shallow(events[open][1].end),\n              end: shallow(events[index][1].start)\n            }\n\n            // Opening.\n            nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            // Between.\n            chunkedSplice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            )\n\n            // Closing.\n            chunkedSplice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    return removeRemainingSequences(events)\n  }\n\n  function removeRemainingSequences(events) {\n    var index = -1\n    var length = events.length\n\n    while (++index < length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    var previous = this.previous\n    var events = this.events\n    var size = 0\n\n    return start\n\n    function start(code) {\n      if (\n        code !== 126 ||\n        (previous === 126 &&\n          events[events.length - 1][1].type !== 'characterEscape')\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    function more(code) {\n      var before = classifyCharacter(previous)\n      var token\n      var after\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      token = effects.exit('strikethroughSequenceTemporary')\n      after = classifyCharacter(code)\n      token._open = !after || (after === 2 && before)\n      token._close = !before || (before === 2 && after)\n      return ok(code)\n    }\n  }\n}\n","module.exports = require('./syntax')\n","exports.flow = {\n  null: {tokenize: tokenizeTable, resolve: resolveTable, interruptible: true}\n}\n\nvar createSpace = require('micromark/dist/tokenize/factory-space')\n\nvar setextUnderlineMini = {tokenize: tokenizeSetextUnderlineMini, partial: true}\nvar nextPrefixedOrBlank = {tokenize: tokenizeNextPrefixedOrBlank, partial: true}\n\nfunction resolveTable(events, context) {\n  var length = events.length\n  var index = -1\n  var token\n  var inHead\n  var inDelimiterRow\n  var inRow\n  var cell\n  var content\n  var text\n  var contentStart\n  var contentEnd\n  var cellStart\n\n  while (++index < length) {\n    token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          contentType: 'text'\n        }\n\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        length = events.length\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n      cellStart &&\n      cellStart + 1 < index\n    ) {\n      cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      length = events.length\n      cellStart = index + 1\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeTable(effects, ok, nok) {\n  var align = []\n  var tableHeaderCount = 0\n  var seenDelimiter\n  var hasDash\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore if - used to be passed in beta micromark versions. */\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return nok(code)\n    }\n\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentHead(code)\n  }\n\n  function cellDividerHead(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n\n  function cellBreakHead(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndHead(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n\n  function inWhitespaceHead(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n\n  function inCellContentEscapeHead(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    }\n\n    // Anything else.\n    return inCellContentHead(code)\n  }\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n\n    // If a setext heading, exit.\n    return effects.check(\n      setextUnderlineMini,\n      nok,\n      // Support an indent before the delimiter row.\n      createSpace(effects, rowStartDelimiter, 'linePrefix', 4)\n    )\n  }\n\n  function rowStartDelimiter(code) {\n    // If there’s another space, or we’re at the EOL/EOF, exit.\n    if (code === null || code < 0 || code === 32) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    return atDelimiterRowBreak(code)\n  }\n\n  function atDelimiterRowBreak(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push(null)\n      return inFillerDelimiter\n    }\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    }\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function inWhitespaceDelimiter(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n\n  function inFillerDelimiter(code) {\n    // `-`\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n\n  function afterLeftAlignment(code) {\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    }\n\n    // Anything else is not ok.\n    return nok(code)\n  }\n\n  function afterRightAlignment(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `|`\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow')\n\n    // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(nextPrefixedOrBlank, tableClose, tableContinue)(code)\n  }\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n\n  function tableContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // We checked that it’s not a prefixed or blank line, so we’re certain a\n    // body is coming, though it may be indented.\n    return createSpace(effects, bodyStart, 'linePrefix', 4)\n  }\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n\n  function rowStartBody(code) {\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentBody(code)\n  }\n\n  function cellDividerBody(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n\n  function cellBreakBody(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndBody(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n\n  function inWhitespaceBody(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n\n  function inCellContentEscapeBody(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    }\n\n    // Anything else.\n    return inCellContentBody(code)\n  }\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      tableBodyContinue\n    )(code)\n  }\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n\n  function tableBodyContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // Support an optional prefix, then start a body row.\n    return createSpace(effects, rowStartBody, 'linePrefix', 4)\n  }\n}\n\n// Based on micromark, but that won’t work as we’re in a table, and that expects\n// content.\n// <https://github.com/micromark/micromark/blob/main/lib/tokenize/setext-underline.js>\nfunction tokenizeSetextUnderlineMini(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // `-`\n    if (code !== 45) {\n      return nok(code)\n    }\n\n    effects.enter('setextUnderline')\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return sequence\n    }\n\n    return whitespace(code)\n  }\n\n  function whitespace(code) {\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return whitespace\n    }\n\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  var size = 0\n\n  return start\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check')\n    // EOL.\n    effects.consume(code)\n    return whitespace\n  }\n\n  function whitespace(code) {\n    // VS or SP.\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    }\n\n    // EOF or whitespace\n    if (code === null || code < 0) {\n      return ok(code)\n    }\n\n    // Anything else.\n    return nok(code)\n  }\n}\n","module.exports = require('./syntax')\n","var markdownLineEndingOrSpace = require('micromark/dist/character/markdown-line-ending-or-space')\nvar spaceFactory = require('micromark/dist/tokenize/factory-space')\nvar prefixSize = require('micromark/dist/util/prefix-size')\n\nvar tasklistCheck = {tokenize: tokenizeTasklistCheck}\n\nexports.text = {91: tasklistCheck}\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  var self = this\n\n  return open\n\n  function open(code) {\n    if (\n      // Exit if not `[`.\n      code !== 91 ||\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  function inside(code) {\n    // Tab or space.\n    if (code === -2 || code === 32) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    // Upper- and lower `x`.\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  function close(code) {\n    // `]`\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  var self = this\n\n  return spaceFactory(effects, after, 'whitespace')\n\n  function after(code) {\n    return prefixSize(self.events, 'whitespace') &&\n      code !== null &&\n      !markdownLineEndingOrSpace(code)\n      ? ok(code)\n      : nok(code)\n  }\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown')\nvar table = require('mdast-util-gfm-table/from-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown')\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = configure([\n  autolinkLiteral,\n  strikethrough,\n  table,\n  taskListItem\n])\n\nfunction configure(extensions) {\n  var config = {transforms: [], canContainEols: []}\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n","var ccount = require('ccount')\nvar findAndReplace = require('mdast-util-find-and-replace')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nexports.transforms = [transformGfmAutolinkLiterals]\nexports.enter = {\n  literalAutolink: enterLiteralAutolink,\n  literalAutolinkEmail: enterLiteralAutolinkValue,\n  literalAutolinkHttp: enterLiteralAutolinkValue,\n  literalAutolinkWww: enterLiteralAutolinkValue\n}\nexports.exit = {\n  literalAutolink: exitLiteralAutolink,\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\n  literalAutolinkWww: exitLiteralAutolinkWww\n}\n\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token)\n}\n\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\nfunction findUrl($0, protocol, domain, path, match) {\n  var prefix = ''\n  var parts\n  var result\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    result = [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\nfunction findEmail($0, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\nfunction isCorrectDomain(domain) {\n  var parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction splitUrl(url) {\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  var closingParenIndex\n  var openingParens\n  var closingParens\n\n  if (trail) {\n    url = url.slice(0, trail.index)\n    trail = trail[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\nfunction previous(match, email) {\n  var code = match.input.charCodeAt(match.index - 1)\n  return (\n    (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","'use strict'\n\nmodule.exports = ccount\n\nfunction ccount(source, character) {\n  var value = String(source)\n  var count = 0\n  var index\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character')\n  }\n\n  index = value.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = value.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","'use strict'\n\nmodule.exports = findAndReplace\n\nvar visit = require('unist-util-visit-parents')\nvar convert = require('unist-util-is/convert')\nvar escape = require('escape-string-regexp')\n\nvar splice = [].splice\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings\n  var schema\n\n  if (typeof find === 'string' || (find && typeof find.exec === 'function')) {\n    schema = [[find, replace]]\n  } else {\n    schema = find\n    options = replace\n  }\n\n  settings = options || {}\n\n  search(tree, settings, handlerFactory(toPairs(schema)))\n\n  return tree\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0]\n\n    return handler\n\n    function handler(node, parent) {\n      var find = pair[0]\n      var replace = pair[1]\n      var nodes = []\n      var start = 0\n      var index = parent.children.indexOf(node)\n      var position\n      var match\n      var subhandler\n      var value\n\n      find.lastIndex = 0\n\n      match = find.exec(node.value)\n\n      while (match) {\n        position = match.index\n        value = replace.apply(\n          null,\n          [].concat(match, {index: match.index, input: match.input})\n        )\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({type: 'text', value: node.value.slice(start, position)})\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {type: 'text', value: value}\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value)\n          }\n\n          start = position + match[0].length\n        }\n\n        if (!find.global) {\n          break\n        }\n\n        match = find.exec(node.value)\n      }\n\n      if (position === undefined) {\n        nodes = [node]\n        index--\n      } else {\n        if (start < node.value.length) {\n          nodes.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        nodes.unshift(index, 1)\n        splice.apply(parent.children, nodes)\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1))\n        position = -1\n\n        while (++position < nodes.length) {\n          node = nodes[position]\n\n          if (node.type === 'text') {\n            subhandler(node, parent)\n          } else {\n            search(node, settings, subhandler)\n          }\n        }\n      }\n\n      return index + nodes.length + 1\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || [])\n  var result = []\n\n  visit(tree, 'text', visitor)\n\n  return result\n\n  function visitor(node, parents) {\n    var index = -1\n    var parent\n    var grandparent\n\n    while (++index < parents.length) {\n      parent = parents[index]\n\n      if (\n        ignored(\n          parent,\n          grandparent ? grandparent.children.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    return handler(node, grandparent)\n  }\n}\n\nfunction toPairs(schema) {\n  var result = []\n  var key\n  var index\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema')\n  }\n\n  if ('length' in schema) {\n    index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])])\n    }\n  }\n\n  return result\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner\n\n  function returner() {\n    return replace\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","module.exports = identity\nfunction identity(d) {\n  return d\n}\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","exports.canContainEols = ['delete']\nexports.enter = {strikethrough: enterStrikethrough}\nexports.exit = {strikethrough: exitStrikethrough}\n\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n","exports.enter = {\n  table: enterTable,\n  tableData: enterCell,\n  tableHeader: enterCell,\n  tableRow: enterRow\n}\nexports.exit = {\n  codeText: exitCodeText,\n  table: exitTable,\n  tableData: exit,\n  tableHeader: exit,\n  tableRow: exit\n}\n\nfunction enterTable(token) {\n  this.enter({type: 'table', align: token._align, children: []}, token)\n  this.setData('inTable', true)\n}\n\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\nfunction exit(token) {\n  this.exit(token)\n}\n\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\nfunction exitCodeText(token) {\n  var value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  this.stack[this.stack.length - 1].value = value\n  this.exit(token)\n}\n\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n","exports.exit = {\n  taskListCheckValueChecked: exitCheck,\n  taskListCheckValueUnchecked: exitCheck,\n  paragraph: exitParagraphWithTaskListItem\n}\n\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked =\n    token.type === 'taskListCheckValueChecked'\n}\n\nfunction exitParagraphWithTaskListItem(token) {\n  var parent = this.stack[this.stack.length - 2]\n  var node = this.stack[this.stack.length - 1]\n  var siblings = parent.children\n  var head = node.children[0]\n  var index = -1\n  var firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      if (siblings[index].type === 'paragraph') {\n        firstParaghraph = siblings[index]\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/to-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/to-markdown')\nvar table = require('mdast-util-gfm-table/to-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/to-markdown')\nvar configure = require('mdast-util-to-markdown/lib/configure')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var config = configure(\n    {handlers: {}, join: [], unsafe: [], options: {}},\n    {\n      extensions: [autolinkLiteral, strikethrough, table(options), taskListItem]\n    }\n  )\n\n  return Object.assign(config.options, {\n    handlers: config.handlers,\n    join: config.join,\n    unsafe: config.unsafe\n  })\n}\n","var inConstruct = 'phrasing'\nvar notInConstruct = ['autolink', 'link', 'image', 'label']\n\nexports.unsafe = [\n  {\n    character: '@',\n    before: '[+\\\\-.\\\\w]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: '.',\n    before: '[Ww]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: ':',\n    before: '[ps]',\n    after: '\\\\/',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  }\n]\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\n\nexports.unsafe = [{character: '~', inConstruct: 'phrasing'}]\nexports.handlers = {delete: handleDelete}\n\nhandleDelete.peek = peekDelete\n\nfunction handleDelete(node, _, context) {\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: '~', after: '~'})\n  exit()\n  return '~~' + value + '~~'\n}\n\nfunction peekDelete() {\n  return '~'\n}\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\nvar defaultInlineCode = require('mdast-util-to-markdown/lib/handle/inline-code')\nvar markdownTable = require('markdown-table')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var settings = options || {}\n  var padding = settings.tableCellPadding\n  var alignDelimiters = settings.tablePipeAlign\n  var stringLength = settings.stringLength\n  var around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  function handleTable(node, _, context) {\n    return serializeData(handleTableAsData(node, context), node.align)\n  }\n\n  // This function isn’t really used normally, because we handle rows at the\n  // table level.\n  // But, if someone passes in a table row, this ensures we make somewhat sense.\n  function handleTableRow(node, _, context) {\n    var row = handleTableRowAsData(node, context)\n    // `markdown-table` will always add an align row\n    var value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  function handleTableCell(node, _, context) {\n    var exit = context.enter('tableCell')\n    var value = phrasing(node, context, {before: around, after: around})\n    exit()\n    return value\n  }\n\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align: align,\n      alignDelimiters: alignDelimiters,\n      padding: padding,\n      stringLength: stringLength\n    })\n  }\n\n  function handleTableAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('table')\n\n    while (++index < length) {\n      result[index] = handleTableRowAsData(children[index], context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function handleTableRowAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('tableRow')\n\n    while (++index < length) {\n      result[index] = handleTableCell(children[index], node, context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function inlineCodeWithTable(node, parent, context) {\n    var value = defaultInlineCode(node, parent, context)\n\n    if (context.stack.indexOf('tableCell') !== -1) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = markdownTable\n\nvar trailingWhitespace = / +$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar colon = ':'\nvar verticalBar = '|'\n\nvar x = 0\nvar C = 67\nvar L = 76\nvar R = 82\nvar c = 99\nvar l = 108\nvar r = 114\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var padding = settings.padding !== false\n  var start = settings.delimiterStart !== false\n  var end = settings.delimiterEnd !== false\n  var align = (settings.align || []).concat()\n  var alignDelimiters = settings.alignDelimiters !== false\n  var alignments = []\n  var stringLength = settings.stringLength || defaultStringLength\n  var rowIndex = -1\n  var rowLength = table.length\n  var cellMatrix = []\n  var sizeMatrix = []\n  var row = []\n  var sizes = []\n  var longestCellByColumn = []\n  var mostCellsPerRow = 0\n  var cells\n  var columnIndex\n  var columnLength\n  var largest\n  var size\n  var cell\n  var lines\n  var line\n  var before\n  var after\n  var code\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < rowLength) {\n    cells = table[rowIndex]\n    columnIndex = -1\n    columnLength = cells.length\n    row = []\n    sizes = []\n\n    if (columnLength > mostCellsPerRow) {\n      mostCellsPerRow = columnLength\n    }\n\n    while (++columnIndex < columnLength) {\n      cell = serialize(cells[columnIndex])\n\n      if (alignDelimiters === true) {\n        size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        largest = longestCellByColumn[columnIndex]\n\n        if (largest === undefined || size > largest) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    code = toAlignment(align)\n\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n  row = []\n  sizes = []\n\n  while (++columnIndex < columnLength) {\n    code = alignments[columnIndex]\n    before = ''\n    after = ''\n\n    if (code === l) {\n      before = colon\n    } else if (code === r) {\n      after = colon\n    } else if (code === c) {\n      before = colon\n      after = colon\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    size = alignDelimiters\n      ? Math.max(\n          1,\n          longestCellByColumn[columnIndex] - before.length - after.length\n        )\n      : 1\n\n    cell = before + repeat(dash, size) + after\n\n    if (alignDelimiters === true) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  rowLength = cellMatrix.length\n  lines = []\n\n  while (++rowIndex < rowLength) {\n    row = cellMatrix[rowIndex]\n    sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    columnLength = mostCellsPerRow\n    line = []\n\n    while (++columnIndex < columnLength) {\n      cell = row[columnIndex] || ''\n      before = ''\n      after = ''\n\n      if (alignDelimiters === true) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        code = alignments[columnIndex]\n\n        if (code === r) {\n          before = repeat(space, size)\n        } else if (code === c) {\n          if (size % 2 === 0) {\n            before = repeat(space, size / 2)\n            after = before\n          } else {\n            before = repeat(space, size / 2 + 0.5)\n            after = repeat(space, size / 2 - 0.5)\n          }\n        } else {\n          after = repeat(space, size)\n        }\n      }\n\n      if (start === true && columnIndex === 0) {\n        line.push(verticalBar)\n      }\n\n      if (\n        padding === true &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(alignDelimiters === false && cell === '') &&\n        (start === true || columnIndex !== 0)\n      ) {\n        line.push(space)\n      }\n\n      if (alignDelimiters === true) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (alignDelimiters === true) {\n        line.push(after)\n      }\n\n      if (padding === true) {\n        line.push(space)\n      }\n\n      if (end === true || columnIndex !== columnLength - 1) {\n        line.push(verticalBar)\n      }\n    }\n\n    line = line.join('')\n\n    if (end === false) {\n      line = line.replace(trailingWhitespace, '')\n    }\n\n    lines.push(line)\n  }\n\n  return lines.join(lineFeed)\n}\n\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\nfunction defaultStringLength(value) {\n  return value.length\n}\n\nfunction toAlignment(value) {\n  var code = typeof value === 'string' ? value.charCodeAt(0) : x\n\n  return code === L || code === l\n    ? l\n    : code === R || code === r\n    ? r\n    : code === C || code === c\n    ? c\n    : x\n}\n","var defaultListItem = require('mdast-util-to-markdown/lib/handle/list-item')\n\nexports.unsafe = [{atBreak: true, character: '-', after: '[:|-]'}]\n\nexports.handlers = {\n  listItem: listItemWithTaskListItem\n}\n\nfunction listItemWithTaskListItem(node, parent, context) {\n  var value = defaultListItem(node, parent, context)\n  var head = node.children[0]\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] '\n  }\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n"],"sourceRoot":""}