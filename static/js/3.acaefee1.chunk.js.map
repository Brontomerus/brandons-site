{"version":3,"sources":["../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/regex-check.js","../node_modules/mdast-util-gfm/node_modules/repeat-string/index.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/chunked-splice.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/unicode-punctuation.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/unicode-whitespace.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/tokenize/factory-space.js","../node_modules/mdast-util-gfm/node_modules/unist-util-is/convert.js","../node_modules/mdast-util-gfm/node_modules/micromark/dist/util/regex-check.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/micromark-extension-gfm/syntax.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/combine-extensions.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/constant/has-own-property.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/constant/splice.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/miniflat.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-autolink-literal/index.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-autolink-literal/syntax.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/ascii-alpha.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/constant/from-char-code.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/ascii-alphanumeric.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/ascii-control.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/markdown-line-ending.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-strikethrough/index.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/classify-character.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/resolve-all.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/shallow.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/constant/assign.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-table/index.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-table/syntax.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/character/markdown-space.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-task-list-item/index.js","../node_modules/micromark-extension-gfm/node_modules/micromark-extension-gfm-task-list-item/syntax.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/prefix-size.js","../node_modules/micromark-extension-gfm/node_modules/micromark/dist/util/size-chunks.js","../node_modules/mdast-util-gfm/from-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-autolink-literal/from-markdown.js","../node_modules/mdast-util-gfm/node_modules/ccount/index.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-find-and-replace/index.js","../node_modules/mdast-util-gfm/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-gfm/node_modules/unist-util-visit-parents/color.browser.js","../node_modules/mdast-util-gfm/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm/node_modules/micromark/dist/character/unicode-punctuation.js","../node_modules/mdast-util-gfm/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../node_modules/mdast-util-gfm/node_modules/micromark/dist/constant/from-char-code.js","../node_modules/mdast-util-gfm/node_modules/micromark/dist/character/unicode-whitespace.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-strikethrough/from-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-table/from-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-task-list-item/from-markdown.js","../node_modules/mdast-util-gfm/to-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-autolink-literal/to-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-strikethrough/to-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-table/to-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-gfm/node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-gfm-task-list-item/to-markdown.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-gfm/node_modules/mdast-util-to-markdown/lib/configure.js"],"names":["fromCharCode","require","module","exports","regex","code","test","cache","res","str","num","TypeError","max","length","substr","splice","list","start","remove","items","parameters","end","chunkStart","Array","from","unshift","apply","slice","unicodePunctuationRegex","unicodePunctuation","regexCheck","unicodeWhitespace","markdownSpace","effects","ok","type","limit","Infinity","size","enter","prefix","consume","exit","convert","node","Boolean","typeFactory","tests","checks","index","any","this","arguments","anyFactory","all","key","allFactory","Error","parent","context","safeOptions","after","handle","child","children","results","before","handlers","peek","charAt","replace","push","join","warningIssued","syntax","fromMarkdown","toMarkdown","options","data","Parser","prototype","blockTokenizers","Compiler","visitors","console","warn","add","field","value","combine","autolink","strikethrough","table","tasklist","hasOwnProperty","chunkedSplice","miniflat","extension","hook","left","right","call","constructs","existing","extensions","own","undefined","asciiAlpha","asciiAlphanumeric","asciiControl","markdownLineEnding","www","tokenize","nok","w2","w3","dot","partial","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","check","namedCharacterReference","done","punctuationContinuation","punctuation","path","balance","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","inside","wwwAutolink","self","previousWww","previous","events","attempt","httpAutolink","previousHttp","t1","t2","p","s","colon","slash1","slash2","emailAutolink","hasDot","gfmAtext","previousEmail","atext","label","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","text","_balanced","String","single","singleTilde","tokenizer","more","token","classifyCharacter","_open","_close","resolveAll","open","nextEvents","offset","shallow","parser","insideSpan","null","removeRemainingSequences","126","markdownLineEndingOrSpace","resolve","called","indexOf","assign","object","Object","flow","seenDelimiter","hasDash","align","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","setextUnderlineMini","createSpace","rowStartDelimiter","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","atDelimiterRowBreak","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","tableContinue","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","tableBodyContinue","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cell","content","contentStart","contentEnd","cellStart","contentType","interruptible","sequence","whitespace","spaceFactory","prefixSize","tasklistCheck","_gfmTasklistFirstContentOfListItem","close","spaceThenNonSpace","91","sizeChunks","tail","sliceStream","chunks","autolinkLiteral","taskListItem","config","concat","transforms","canContainEols","configure","ccount","findAndReplace","enterLiteralAutolinkValue","autolinkProtocol","findUrl","$0","protocol","match","parts","result","split","isCorrectDomain","url","closingParenIndex","openingParens","closingParens","trail","exec","splitUrl","title","findEmail","email","input","charCodeAt","tree","ignore","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","autolinkEmail","stack","sliceSerialize","source","character","count","find","settings","schema","search","handlerFactory","pairs","pair","handler","position","subhandler","nodes","lastIndex","global","toExpression","toFunction","toPairs","visit","escape","ignored","parents","grandparent","RegExp","visitParents","color","CONTINUE","SKIP","EXIT","visitor","reverse","step","is","factory","name","tagName","displayName","subresult","grandparents","toResult","d","string","enterCell","$1","setData","tableData","tableHeader","tableRow","codeText","resume","getData","exitCheck","checked","taskListCheckValueChecked","taskListCheckValueUnchecked","paragraph","firstParaghraph","siblings","head","shift","column","unsafe","inConstruct","notInConstruct","phrasing","handleDelete","_","delete","defaultInlineCode","markdownTable","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","atBreak","serializeData","subexit","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","inlineCode","matrix","patternCompile","pattern","expression","_compiled","repeat","cells","columnIndex","columnLength","largest","lines","line","delimiterStart","delimiterEnd","alignments","defaultStringLength","rowIndex","rowLength","cellMatrix","sizeMatrix","row","sizes","longestCellByColumn","mostCellsPerRow","toAlignment","r","Math","space","trailingWhitespace","defaultListItem","listItem","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","indentLines","blank","marker","style","between","Number","map","eol","one","base"],"mappings":"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","file":"static/js/3.acaefee1.chunk.js","sourcesContent":["'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","'use strict'\n\nvar syntax = require('micromark-extension-gfm')\nvar fromMarkdown = require('mdast-util-gfm/from-markdown')\nvar toMarkdown = require('mdast-util-gfm/to-markdown')\n\nvar warningIssued\n\nmodule.exports = gfm\n\nfunction gfm(options) {\n  var data = this.data()\n\n  /* istanbul ignore next - old remark. */\n  if (\n    !warningIssued &&\n    ((this.Parser &&\n      this.Parser.prototype &&\n      this.Parser.prototype.blockTokenizers) ||\n      (this.Compiler &&\n        this.Compiler.prototype &&\n        this.Compiler.prototype.visitors))\n  ) {\n    warningIssued = true\n    console.warn(\n      '[remark-gfm] Warning: please upgrade to remark 13 to use this plugin'\n    )\n  }\n\n  add('micromarkExtensions', syntax(options))\n  add('fromMarkdownExtensions', fromMarkdown)\n  add('toMarkdownExtensions', toMarkdown(options))\n\n  function add(field, value) {\n    /* istanbul ignore if - other extensions. */\n    if (data[field]) data[field].push(value)\n    else data[field] = [value]\n  }\n}\n","module.exports = require('./syntax')\n","var combine = require('micromark/dist/util/combine-extensions')\nvar autolink = require('micromark-extension-gfm-autolink-literal')\nvar strikethrough = require('micromark-extension-gfm-strikethrough')\nvar table = require('micromark-extension-gfm-table')\nvar tasklist = require('micromark-extension-gfm-task-list-item')\n\nmodule.exports = create\n\nfunction create(options) {\n  return combine([autolink, strikethrough(options), table, tasklist])\n}\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","module.exports = require('./syntax')\n","var asciiAlpha = require('micromark/dist/character/ascii-alpha')\nvar asciiAlphanumeric = require('micromark/dist/character/ascii-alphanumeric')\nvar asciiControl = require('micromark/dist/character/ascii-control')\nvar markdownLineEnding = require('micromark/dist/character/markdown-line-ending')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nvar www = {tokenize: tokenizeWww, partial: true}\nvar domain = {tokenize: tokenizeDomain, partial: true}\nvar path = {tokenize: tokenizePath, partial: true}\nvar punctuation = {tokenize: tokenizePunctuation, partial: true}\nvar namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\n\nvar wwwAutolink = {tokenize: tokenizeWwwAutolink, previous: previousWww}\nvar httpAutolink = {tokenize: tokenizeHttpAutolink, previous: previousHttp}\nvar emailAutolink = {tokenize: tokenizeEmailAutolink, previous: previousEmail}\n\nvar text = {}\n\n// Export hooked constructs.\nexports.text = text\n\n// `0`\nvar code = 48\n\n// While the code is smaller than `{`.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  // Jump from `:` -> `A`\n  if (code === 58) code = 65\n  // Jump from `[` -> `a`\n  else if (code === 91) code = 97\n}\n\n// `+`\ntext[43] = emailAutolink\n// `-`\ntext[45] = emailAutolink\n// `.`\ntext[46] = emailAutolink\n// `_`\ntext[95] = emailAutolink\n// `h`.\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\n// `w`.\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  var self = this\n  var hasDot\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    // `@`\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n\n  function label(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (\n      // `-`\n      code === 45 ||\n      // `_`\n      code === 95\n    ) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    return label\n  }\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n\n  function afterDashOrUnderscore(code) {\n    // `.`\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n\n  function done(code) {\n    if (hasDot) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 87 && code - 32 !== 87) ||\n      !previousWww(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  var self = this\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore next - hooks. */\n    if (\n      (code !== 72 && code - 32 !== 72) ||\n      !previousHttp(self.previous) ||\n      previous(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n\n  function t1(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n\n  function t2(code) {\n    // `t`\n    if (code === 84 || code - 32 === 84) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n\n  function p(code) {\n    // `p`\n    if (code === 80 || code - 32 === 80) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n\n  function s(code) {\n    // `s`\n    if (code === 83 || code - 32 === 83) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n\n  function colon(code) {\n    // `:`\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n\n  function slash1(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n\n  function slash2(code) {\n    // `/`\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume a `w`.\n    effects.consume(code)\n    return w2\n  }\n\n  function w2(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n\n  function w3(code) {\n    // `w`\n    if (code === 87 || code - 32 === 87) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n\n  function dot(code) {\n    // `.`\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n\nfunction tokenizeDomain(effects, ok, nok) {\n  var hasUnderscoreInLastSegment\n  var hasUnderscoreInLastLastSegment\n\n  return domain\n\n  function domain(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 /* `.` */ || code === 95 /* `_` */) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    if (\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 /* `-` */ && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n\n  function punctuationContinuation(code) {\n    // `.`\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    // `_`\n    if (code === 95) hasUnderscoreInLastSegment = true\n\n    effects.consume(code)\n    return domain\n  }\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizePath(effects, ok) {\n  var balance = 0\n\n  return inPath\n\n  function inPath(code) {\n    // `&`\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    // `(`\n    if (code === 40) {\n      balance++\n    }\n\n    // `)`\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Assume an ampersand.\n    effects.consume(code)\n    return inside\n  }\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    // `;`\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // Always a valid trailing punctuation marker.\n    effects.consume(code)\n    return after\n  }\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    }\n\n    // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n\nfunction trailingPunctuation(code) {\n  return (\n    // `!`\n    code === 33 ||\n    // `\"`\n    code === 34 ||\n    // `'`\n    code === 39 ||\n    // `)`\n    code === 41 ||\n    // `*`\n    code === 42 ||\n    // `,`\n    code === 44 ||\n    // `.`\n    code === 46 ||\n    // `:`\n    code === 58 ||\n    // `;`\n    code === 59 ||\n    // `<`\n    code === 60 ||\n    // `?`\n    code === 63 ||\n    // `_`.\n    code === 95 ||\n    // `~`\n    code === 126\n  )\n}\n\nfunction pathEnd(code) {\n  return (\n    // EOF.\n    code === null ||\n    // CR, LF, CRLF, HT, VS.\n    code < 0 ||\n    // Space.\n    code === 32 ||\n    // `<`\n    code === 60\n  )\n}\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 /* `+` */ ||\n    code === 45 /* `-` */ ||\n    code === 46 /* `.` */ ||\n    code === 95 /* `_` */ ||\n    asciiAlphanumeric(code)\n  )\n}\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code < 0 ||\n    code === 32 /* ` ` */ ||\n    code === 40 /* `(` */ ||\n    code === 42 /* `*` */ ||\n    code === 95 /* `_` */ ||\n    code === 126 /* `~` */\n  )\n}\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n\nfunction previousEmail(code) {\n  return code !== 47 /* `/` */ && previousHttp(code)\n}\n\nfunction previous(events) {\n  var index = events.length\n\n  while (index--) {\n    if (\n      (events[index][1].type === 'labelLink' ||\n        events[index][1].type === 'labelImage') &&\n      !events[index][1]._balanced\n    ) {\n      return true\n    }\n  }\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","module.exports = create\n\nvar classifyCharacter = require('micromark/dist/util/classify-character')\nvar chunkedSplice = require('micromark/dist/util/chunked-splice')\nvar resolveAll = require('micromark/dist/util/resolve-all')\nvar shallow = require('micromark/dist/util/shallow')\n\nfunction create(options) {\n  var settings = options || {}\n  var single = settings.singleTilde\n  var tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {text: {126: tokenizer}, insideSpan: {null: tokenizer}}\n\n  // Take events and resolve strikethrough.\n  function resolveAllStrikethrough(events, context) {\n    var index = -1\n    var strikethrough\n    var text\n    var open\n    var nextEvents\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            strikethrough = {\n              type: 'strikethrough',\n              start: shallow(events[open][1].start),\n              end: shallow(events[index][1].end)\n            }\n\n            text = {\n              type: 'strikethroughText',\n              start: shallow(events[open][1].end),\n              end: shallow(events[index][1].start)\n            }\n\n            // Opening.\n            nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n\n            // Between.\n            chunkedSplice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            )\n\n            // Closing.\n            chunkedSplice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n\n            chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    return removeRemainingSequences(events)\n  }\n\n  function removeRemainingSequences(events) {\n    var index = -1\n    var length = events.length\n\n    while (++index < length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    var previous = this.previous\n    var events = this.events\n    var size = 0\n\n    return start\n\n    function start(code) {\n      if (\n        code !== 126 ||\n        (previous === 126 &&\n          events[events.length - 1][1].type !== 'characterEscape')\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    function more(code) {\n      var before = classifyCharacter(previous)\n      var token\n      var after\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      token = effects.exit('strikethroughSequenceTemporary')\n      after = classifyCharacter(code)\n      token._open = !after || (after === 2 && before)\n      token._close = !before || (before === 2 && after)\n      return ok(code)\n    }\n  }\n}\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","module.exports = require('./syntax')\n","exports.flow = {\n  null: {tokenize: tokenizeTable, resolve: resolveTable, interruptible: true}\n}\n\nvar createSpace = require('micromark/dist/tokenize/factory-space')\n\nvar setextUnderlineMini = {tokenize: tokenizeSetextUnderlineMini, partial: true}\nvar nextPrefixedOrBlank = {tokenize: tokenizeNextPrefixedOrBlank, partial: true}\n\nfunction resolveTable(events, context) {\n  var length = events.length\n  var index = -1\n  var token\n  var inHead\n  var inDelimiterRow\n  var inRow\n  var cell\n  var content\n  var text\n  var contentStart\n  var contentEnd\n  var cellStart\n\n  while (++index < length) {\n    token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          contentType: 'text'\n        }\n\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        length = events.length\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart &&\n      cellStart + 1 < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      length = events.length\n      cellStart = index + 1\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeTable(effects, ok, nok) {\n  var align = []\n  var tableHeaderCount = 0\n  var seenDelimiter\n  var hasDash\n\n  return start\n\n  function start(code) {\n    /* istanbul ignore if - used to be passed in beta micromark versions. */\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return nok(code)\n    }\n\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentHead(code)\n  }\n\n  function cellDividerHead(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n\n  function cellBreakHead(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndHead(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n\n  function inWhitespaceHead(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n\n  function inCellContentEscapeHead(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    }\n\n    // Anything else.\n    return inCellContentHead(code)\n  }\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n\n    // If a setext heading, exit.\n    return effects.check(\n      setextUnderlineMini,\n      nok,\n      // Support an indent before the delimiter row.\n      createSpace(effects, rowStartDelimiter, 'linePrefix', 4)\n    )\n  }\n\n  function rowStartDelimiter(code) {\n    // If there’s another space, or we’re at the EOL/EOF, exit.\n    if (code === null || code < 0 || code === 32) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    return atDelimiterRowBreak(code)\n  }\n\n  function atDelimiterRowBreak(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push(null)\n      return inFillerDelimiter\n    }\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    }\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function inWhitespaceDelimiter(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n\n  function inFillerDelimiter(code) {\n    // `-`\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    // `:`\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n\n  function afterLeftAlignment(code) {\n    // `-`\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    }\n\n    // Anything else is not ok.\n    return nok(code)\n  }\n\n  function afterRightAlignment(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return rowEndDelimiter(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    // `|`\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow')\n\n    // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(nextPrefixedOrBlank, tableClose, tableContinue)(code)\n  }\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n\n  function tableContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // We checked that it’s not a prefixed or blank line, so we’re certain a\n    // body is coming, though it may be indented.\n    return createSpace(effects, bodyStart, 'linePrefix', 4)\n  }\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n\n  function rowStartBody(code) {\n    effects.enter('tableRow')\n\n    // If we start with a pipe, we open a cell marker.\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent')\n    // Can’t be space or eols at the start of a construct, so we’re in a cell.\n    return inCellContentBody(code)\n  }\n\n  function cellDividerBody(code) {\n    // Always a pipe.\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n\n  function cellBreakBody(code) {\n    // EOF, CR, LF, CRLF.\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return atRowEndBody(code)\n    }\n\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    // `|`\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n\n  function inWhitespaceBody(code) {\n    // HT, VS, SP.\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code < 0 || code === 32 || code === 124) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    // `\\`\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n\n  function inCellContentEscapeBody(code) {\n    // `\\` or `|`\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    }\n\n    // Anything else.\n    return inCellContentBody(code)\n  }\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      tableBodyContinue\n    )(code)\n  }\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n\n  function tableBodyContinue(code) {\n    // Always a line ending.\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    // Support an optional prefix, then start a body row.\n    return createSpace(effects, rowStartBody, 'linePrefix', 4)\n  }\n}\n\n// Based on micromark, but that won’t work as we’re in a table, and that expects\n// content.\n// <https://github.com/micromark/micromark/blob/main/lib/tokenize/setext-underline.js>\nfunction tokenizeSetextUnderlineMini(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    // `-`\n    if (code !== 45) {\n      return nok(code)\n    }\n\n    effects.enter('setextUnderline')\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return sequence\n    }\n\n    return whitespace(code)\n  }\n\n  function whitespace(code) {\n    if (code === -2 || code === -1 || code === 32) {\n      effects.consume(code)\n      return whitespace\n    }\n\n    if (code === null || code === -5 || code === -4 || code === -3) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  var size = 0\n\n  return start\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check')\n    // EOL.\n    effects.consume(code)\n    return whitespace\n  }\n\n  function whitespace(code) {\n    // VS or SP.\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    }\n\n    // EOF or whitespace\n    if (code === null || code < 0) {\n      return ok(code)\n    }\n\n    // Anything else.\n    return nok(code)\n  }\n}\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","module.exports = require('./syntax')\n","var markdownLineEndingOrSpace = require('micromark/dist/character/markdown-line-ending-or-space')\nvar spaceFactory = require('micromark/dist/tokenize/factory-space')\nvar prefixSize = require('micromark/dist/util/prefix-size')\n\nvar tasklistCheck = {tokenize: tokenizeTasklistCheck}\n\nexports.text = {91: tasklistCheck}\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  var self = this\n\n  return open\n\n  function open(code) {\n    if (\n      // Exit if not `[`.\n      code !== 91 ||\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  function inside(code) {\n    // Tab or space.\n    if (code === -2 || code === 32) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    // Upper- and lower `x`.\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n\n  function close(code) {\n    // `]`\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check({tokenize: spaceThenNonSpace}, ok, nok)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  var self = this\n\n  return spaceFactory(effects, after, 'whitespace')\n\n  function after(code) {\n    return prefixSize(self.events, 'whitespace') &&\n      code !== null &&\n      !markdownLineEndingOrSpace(code)\n      ? ok(code)\n      : nok(code)\n  }\n}\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/from-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/from-markdown')\nvar table = require('mdast-util-gfm-table/from-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/from-markdown')\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = configure([\n  autolinkLiteral,\n  strikethrough,\n  table,\n  taskListItem\n])\n\nfunction configure(extensions) {\n  var config = {transforms: [], canContainEols: []}\n  var length = extensions.length\n  var index = -1\n\n  while (++index < length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n  var right\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n    right = extension[key]\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, right)\n    } else {\n      Object.assign(left, right)\n    }\n  }\n}\n","var ccount = require('ccount')\nvar findAndReplace = require('mdast-util-find-and-replace')\nvar unicodePunctuation = require('micromark/dist/character/unicode-punctuation')\nvar unicodeWhitespace = require('micromark/dist/character/unicode-whitespace')\n\nexports.transforms = [transformGfmAutolinkLiterals]\nexports.enter = {\n  literalAutolink: enterLiteralAutolink,\n  literalAutolinkEmail: enterLiteralAutolinkValue,\n  literalAutolinkHttp: enterLiteralAutolinkValue,\n  literalAutolinkWww: enterLiteralAutolinkValue\n}\nexports.exit = {\n  literalAutolink: exitLiteralAutolink,\n  literalAutolinkEmail: exitLiteralAutolinkEmail,\n  literalAutolinkHttp: exitLiteralAutolinkHttp,\n  literalAutolinkWww: exitLiteralAutolinkWww\n}\n\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  this.stack[this.stack.length - 1].url = 'http://' + this.sliceSerialize(token)\n}\n\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/i, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\nfunction findUrl($0, protocol, domain, path, match) {\n  var prefix = ''\n  var parts\n  var result\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    result = [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\nfunction findEmail($0, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\nfunction isCorrectDomain(domain) {\n  var parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction splitUrl(url) {\n  var trail = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  var closingParenIndex\n  var openingParens\n  var closingParens\n\n  if (trail) {\n    url = url.slice(0, trail.index)\n    trail = trail[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\nfunction previous(match, email) {\n  var code = match.input.charCodeAt(match.index - 1)\n  return (\n    (code !== code || unicodeWhitespace(code) || unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","'use strict'\n\nmodule.exports = ccount\n\nfunction ccount(source, character) {\n  var value = String(source)\n  var count = 0\n  var index\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character')\n  }\n\n  index = value.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = value.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","'use strict'\n\nmodule.exports = findAndReplace\n\nvar visit = require('unist-util-visit-parents')\nvar convert = require('unist-util-is/convert')\nvar escape = require('escape-string-regexp')\n\nvar splice = [].splice\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings\n  var schema\n\n  if (typeof find === 'string' || (find && typeof find.exec === 'function')) {\n    schema = [[find, replace]]\n  } else {\n    schema = find\n    options = replace\n  }\n\n  settings = options || {}\n\n  search(tree, settings, handlerFactory(toPairs(schema)))\n\n  return tree\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0]\n\n    return handler\n\n    function handler(node, parent) {\n      var find = pair[0]\n      var replace = pair[1]\n      var nodes = []\n      var start = 0\n      var index = parent.children.indexOf(node)\n      var position\n      var match\n      var subhandler\n      var value\n\n      find.lastIndex = 0\n\n      match = find.exec(node.value)\n\n      while (match) {\n        position = match.index\n        value = replace.apply(\n          null,\n          [].concat(match, {index: match.index, input: match.input})\n        )\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({type: 'text', value: node.value.slice(start, position)})\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {type: 'text', value: value}\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value)\n          }\n\n          start = position + match[0].length\n        }\n\n        if (!find.global) {\n          break\n        }\n\n        match = find.exec(node.value)\n      }\n\n      if (position === undefined) {\n        nodes = [node]\n        index--\n      } else {\n        if (start < node.value.length) {\n          nodes.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        nodes.unshift(index, 1)\n        splice.apply(parent.children, nodes)\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1))\n        position = -1\n\n        while (++position < nodes.length) {\n          node = nodes[position]\n\n          if (node.type === 'text') {\n            subhandler(node, parent)\n          } else {\n            search(node, settings, subhandler)\n          }\n        }\n      }\n\n      return index + nodes.length + 1\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || [])\n  var result = []\n\n  visit(tree, 'text', visitor)\n\n  return result\n\n  function visitor(node, parents) {\n    var index = -1\n    var parent\n    var grandparent\n\n    while (++index < parents.length) {\n      parent = parents[index]\n\n      if (\n        ignored(\n          parent,\n          grandparent ? grandparent.children.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    return handler(node, grandparent)\n  }\n}\n\nfunction toPairs(schema) {\n  var result = []\n  var key\n  var index\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema')\n  }\n\n  if ('length' in schema) {\n    index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])])\n    }\n  }\n\n  return result\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner\n\n  function returner() {\n    return replace\n  }\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","module.exports = identity\nfunction identity(d) {\n  return d\n}\n","'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","exports.canContainEols = ['delete']\nexports.enter = {strikethrough: enterStrikethrough}\nexports.exit = {strikethrough: exitStrikethrough}\n\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n","exports.enter = {\n  table: enterTable,\n  tableData: enterCell,\n  tableHeader: enterCell,\n  tableRow: enterRow\n}\nexports.exit = {\n  codeText: exitCodeText,\n  table: exitTable,\n  tableData: exit,\n  tableHeader: exit,\n  tableRow: exit\n}\n\nfunction enterTable(token) {\n  this.enter({type: 'table', align: token._align, children: []}, token)\n  this.setData('inTable', true)\n}\n\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\nfunction exit(token) {\n  this.exit(token)\n}\n\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\nfunction exitCodeText(token) {\n  var value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  this.stack[this.stack.length - 1].value = value\n  this.exit(token)\n}\n\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n","exports.exit = {\n  taskListCheckValueChecked: exitCheck,\n  taskListCheckValueUnchecked: exitCheck,\n  paragraph: exitParagraphWithTaskListItem\n}\n\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked =\n    token.type === 'taskListCheckValueChecked'\n}\n\nfunction exitParagraphWithTaskListItem(token) {\n  var parent = this.stack[this.stack.length - 2]\n  var node = this.stack[this.stack.length - 1]\n  var siblings = parent.children\n  var head = node.children[0]\n  var index = -1\n  var firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      if (siblings[index].type === 'paragraph') {\n        firstParaghraph = siblings[index]\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n","var autolinkLiteral = require('mdast-util-gfm-autolink-literal/to-markdown')\nvar strikethrough = require('mdast-util-gfm-strikethrough/to-markdown')\nvar table = require('mdast-util-gfm-table/to-markdown')\nvar taskListItem = require('mdast-util-gfm-task-list-item/to-markdown')\nvar configure = require('mdast-util-to-markdown/lib/configure')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var config = configure(\n    {handlers: {}, join: [], unsafe: [], options: {}},\n    {\n      extensions: [autolinkLiteral, strikethrough, table(options), taskListItem]\n    }\n  )\n\n  return Object.assign(config.options, {\n    handlers: config.handlers,\n    join: config.join,\n    unsafe: config.unsafe\n  })\n}\n","var inConstruct = 'phrasing'\nvar notInConstruct = ['autolink', 'link', 'image', 'label']\n\nexports.unsafe = [\n  {\n    character: '@',\n    before: '[+\\\\-.\\\\w]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: '.',\n    before: '[Ww]',\n    after: '[\\\\-.\\\\w]',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  },\n  {\n    character: ':',\n    before: '[ps]',\n    after: '\\\\/',\n    inConstruct: inConstruct,\n    notInConstruct: notInConstruct\n  }\n]\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\n\nexports.unsafe = [{character: '~', inConstruct: 'phrasing'}]\nexports.handlers = {delete: handleDelete}\n\nhandleDelete.peek = peekDelete\n\nfunction handleDelete(node, _, context) {\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: '~', after: '~'})\n  exit()\n  return '~~' + value + '~~'\n}\n\nfunction peekDelete() {\n  return '~'\n}\n","var phrasing = require('mdast-util-to-markdown/lib/util/container-phrasing')\nvar defaultInlineCode = require('mdast-util-to-markdown/lib/handle/inline-code')\nvar markdownTable = require('markdown-table')\n\nmodule.exports = toMarkdown\n\nfunction toMarkdown(options) {\n  var settings = options || {}\n  var padding = settings.tableCellPadding\n  var alignDelimiters = settings.tablePipeAlign\n  var stringLength = settings.stringLength\n  var around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  function handleTable(node, _, context) {\n    return serializeData(handleTableAsData(node, context), node.align)\n  }\n\n  // This function isn’t really used normally, because we handle rows at the\n  // table level.\n  // But, if someone passes in a table row, this ensures we make somewhat sense.\n  function handleTableRow(node, _, context) {\n    var row = handleTableRowAsData(node, context)\n    // `markdown-table` will always add an align row\n    var value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  function handleTableCell(node, _, context) {\n    var exit = context.enter('tableCell')\n    var value = phrasing(node, context, {before: around, after: around})\n    exit()\n    return value\n  }\n\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align: align,\n      alignDelimiters: alignDelimiters,\n      padding: padding,\n      stringLength: stringLength\n    })\n  }\n\n  function handleTableAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('table')\n\n    while (++index < length) {\n      result[index] = handleTableRowAsData(children[index], context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function handleTableRowAsData(node, context) {\n    var children = node.children\n    var index = -1\n    var length = children.length\n    var result = []\n    var subexit = context.enter('tableRow')\n\n    while (++index < length) {\n      result[index] = handleTableCell(children[index], node, context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  function inlineCodeWithTable(node, parent, context) {\n    var value = defaultInlineCode(node, parent, context)\n\n    if (context.stack.indexOf('tableCell') !== -1) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = markdownTable\n\nvar trailingWhitespace = / +$/\n\n// Characters.\nvar space = ' '\nvar lineFeed = '\\n'\nvar dash = '-'\nvar colon = ':'\nvar verticalBar = '|'\n\nvar x = 0\nvar C = 67\nvar L = 76\nvar R = 82\nvar c = 99\nvar l = 108\nvar r = 114\n\n// Create a table from a matrix of strings.\nfunction markdownTable(table, options) {\n  var settings = options || {}\n  var padding = settings.padding !== false\n  var start = settings.delimiterStart !== false\n  var end = settings.delimiterEnd !== false\n  var align = (settings.align || []).concat()\n  var alignDelimiters = settings.alignDelimiters !== false\n  var alignments = []\n  var stringLength = settings.stringLength || defaultStringLength\n  var rowIndex = -1\n  var rowLength = table.length\n  var cellMatrix = []\n  var sizeMatrix = []\n  var row = []\n  var sizes = []\n  var longestCellByColumn = []\n  var mostCellsPerRow = 0\n  var cells\n  var columnIndex\n  var columnLength\n  var largest\n  var size\n  var cell\n  var lines\n  var line\n  var before\n  var after\n  var code\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < rowLength) {\n    cells = table[rowIndex]\n    columnIndex = -1\n    columnLength = cells.length\n    row = []\n    sizes = []\n\n    if (columnLength > mostCellsPerRow) {\n      mostCellsPerRow = columnLength\n    }\n\n    while (++columnIndex < columnLength) {\n      cell = serialize(cells[columnIndex])\n\n      if (alignDelimiters === true) {\n        size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        largest = longestCellByColumn[columnIndex]\n\n        if (largest === undefined || size > largest) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    code = toAlignment(align)\n\n    while (++columnIndex < columnLength) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  columnLength = mostCellsPerRow\n  row = []\n  sizes = []\n\n  while (++columnIndex < columnLength) {\n    code = alignments[columnIndex]\n    before = ''\n    after = ''\n\n    if (code === l) {\n      before = colon\n    } else if (code === r) {\n      after = colon\n    } else if (code === c) {\n      before = colon\n      after = colon\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    size = alignDelimiters\n      ? Math.max(\n          1,\n          longestCellByColumn[columnIndex] - before.length - after.length\n        )\n      : 1\n\n    cell = before + repeat(dash, size) + after\n\n    if (alignDelimiters === true) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  rowLength = cellMatrix.length\n  lines = []\n\n  while (++rowIndex < rowLength) {\n    row = cellMatrix[rowIndex]\n    sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    columnLength = mostCellsPerRow\n    line = []\n\n    while (++columnIndex < columnLength) {\n      cell = row[columnIndex] || ''\n      before = ''\n      after = ''\n\n      if (alignDelimiters === true) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        code = alignments[columnIndex]\n\n        if (code === r) {\n          before = repeat(space, size)\n        } else if (code === c) {\n          if (size % 2 === 0) {\n            before = repeat(space, size / 2)\n            after = before\n          } else {\n            before = repeat(space, size / 2 + 0.5)\n            after = repeat(space, size / 2 - 0.5)\n          }\n        } else {\n          after = repeat(space, size)\n        }\n      }\n\n      if (start === true && columnIndex === 0) {\n        line.push(verticalBar)\n      }\n\n      if (\n        padding === true &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(alignDelimiters === false && cell === '') &&\n        (start === true || columnIndex !== 0)\n      ) {\n        line.push(space)\n      }\n\n      if (alignDelimiters === true) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (alignDelimiters === true) {\n        line.push(after)\n      }\n\n      if (padding === true) {\n        line.push(space)\n      }\n\n      if (end === true || columnIndex !== columnLength - 1) {\n        line.push(verticalBar)\n      }\n    }\n\n    line = line.join('')\n\n    if (end === false) {\n      line = line.replace(trailingWhitespace, '')\n    }\n\n    lines.push(line)\n  }\n\n  return lines.join(lineFeed)\n}\n\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\nfunction defaultStringLength(value) {\n  return value.length\n}\n\nfunction toAlignment(value) {\n  var code = typeof value === 'string' ? value.charCodeAt(0) : x\n\n  return code === L || code === l\n    ? l\n    : code === R || code === r\n    ? r\n    : code === C || code === c\n    ? c\n    : x\n}\n","var defaultListItem = require('mdast-util-to-markdown/lib/handle/list-item')\n\nexports.unsafe = [{atBreak: true, character: '-', after: '[:|-]'}]\n\nexports.handlers = {\n  listItem: listItemWithTaskListItem\n}\n\nfunction listItemWithTaskListItem(node, parent, context) {\n  var value = defaultListItem(node, parent, context)\n  var head = node.children[0]\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] '\n  }\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n"],"sourceRoot":""}